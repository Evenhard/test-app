/**
 * OpenAPI citypizza
 * This is sionic server
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Coordinates from './Coordinates';

/**
 * The ProfileAllOf model module.
 * @module model/ProfileAllOf
 * @version 2.0.1
 */
class ProfileAllOf {
    /**
     * Constructs a new <code>ProfileAllOf</code>.
     * @alias module:model/ProfileAllOf
     * @param id {String} ID выбранного профиля (если есть, если нет - \"0\")
     * @param firstName {String} 
     * @param email {String} 
     * @param phoneCode {String} Первые три цифры?
     * @param phoneNumber {String} Остальные?
     */
    constructor(id, firstName, email, phoneCode, phoneNumber) { 
        
        ProfileAllOf.initialize(this, id, firstName, email, phoneCode, phoneNumber);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, firstName, email, phoneCode, phoneNumber) { 
        obj['id'] = id;
        obj['first_name'] = firstName;
        obj['email'] = email;
        obj['phone_code'] = phoneCode;
        obj['phone_number'] = phoneNumber;
    }

    /**
     * Constructs a <code>ProfileAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProfileAllOf} obj Optional instance to populate.
     * @return {module:model/ProfileAllOf} The populated <code>ProfileAllOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProfileAllOf();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('profile_name')) {
                obj['profile_name'] = ApiClient.convertToType(data['profile_name'], 'String');
            }
            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('phone_code')) {
                obj['phone_code'] = ApiClient.convertToType(data['phone_code'], 'String');
            }
            if (data.hasOwnProperty('phone_number')) {
                obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
            }
            if (data.hasOwnProperty('intercom')) {
                obj['intercom'] = ApiClient.convertToType(data['intercom'], 'String');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
            }
            if (data.hasOwnProperty('email_notify')) {
                obj['email_notify'] = ApiClient.convertToType(data['email_notify'], 'Boolean');
            }
            if (data.hasOwnProperty('phone_notify')) {
                obj['phone_notify'] = ApiClient.convertToType(data['phone_notify'], 'Boolean');
            }
            if (data.hasOwnProperty('drive')) {
                obj['drive'] = ApiClient.convertToType(data['drive'], 'String');
            }
            if (data.hasOwnProperty('floor')) {
                obj['floor'] = ApiClient.convertToType(data['floor'], 'String');
            }
            if (data.hasOwnProperty('room')) {
                obj['room'] = ApiClient.convertToType(data['room'], 'String');
            }
            if (data.hasOwnProperty('coordinates')) {
                obj['coordinates'] = Coordinates.constructFromObject(data['coordinates']);
            }
        }
        return obj;
    }


}

/**
 * ID выбранного профиля (если есть, если нет - \"0\")
 * @member {String} id
 * @default '0'
 */
ProfileAllOf.prototype['id'] = '0';

/**
 * @member {String} profile_name
 */
ProfileAllOf.prototype['profile_name'] = undefined;

/**
 * @member {String} first_name
 */
ProfileAllOf.prototype['first_name'] = undefined;

/**
 * @member {String} email
 */
ProfileAllOf.prototype['email'] = undefined;

/**
 * Первые три цифры?
 * @member {String} phone_code
 */
ProfileAllOf.prototype['phone_code'] = undefined;

/**
 * Остальные?
 * @member {String} phone_number
 */
ProfileAllOf.prototype['phone_number'] = undefined;

/**
 * Домофон
 * @member {String} intercom
 */
ProfileAllOf.prototype['intercom'] = undefined;

/**
 * Комментарий к заказу
 * @member {String} comments
 */
ProfileAllOf.prototype['comments'] = undefined;

/**
 * Согласие на получение email
 * @member {Boolean} email_notify
 */
ProfileAllOf.prototype['email_notify'] = undefined;

/**
 * Согласие на получение sms
 * @member {Boolean} phone_notify
 */
ProfileAllOf.prototype['phone_notify'] = undefined;

/**
 * Подъезд
 * @member {String} drive
 */
ProfileAllOf.prototype['drive'] = undefined;

/**
 * Этаж
 * @member {String} floor
 */
ProfileAllOf.prototype['floor'] = undefined;

/**
 * Номер квартиры/комнаты
 * @member {String} room
 */
ProfileAllOf.prototype['room'] = undefined;

/**
 * @member {module:model/Coordinates} coordinates
 */
ProfileAllOf.prototype['coordinates'] = undefined;






export default ProfileAllOf;

