/**
 * OpenAPI citypizza
 * This is sionic server
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServerError model module.
 * @module model/ServerError
 * @version 2.0.1
 */
class ServerError {
    /**
     * Constructs a new <code>ServerError</code>.
     * Ошибка сервера (ошибки в формате запроса, протоколе, исключения, 400, 403, 404, 500...)
     * @alias module:model/ServerError
     * @param code {Number} 
     * @param message {String} Техническая информация об ошибке
     */
    constructor(code, message) { 
        
        ServerError.initialize(this, code, message);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code, message) { 
        obj['code'] = code;
        obj['message'] = message;
    }

    /**
     * Constructs a <code>ServerError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServerError} obj Optional instance to populate.
     * @return {module:model/ServerError} The populated <code>ServerError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServerError();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'Number');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('fields')) {
                obj['fields'] = ApiClient.convertToType(data['fields'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} code
 */
ServerError.prototype['code'] = undefined;

/**
 * Техническая информация об ошибке
 * @member {String} message
 */
ServerError.prototype['message'] = undefined;

/**
 * @member {String} fields
 */
ServerError.prototype['fields'] = undefined;






export default ServerError;

