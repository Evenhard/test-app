/**
 * OpenAPI citypizza
 * This is sionic server
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Cart from './Cart';
import Profile from './Profile';

/**
 * The Order model module.
 * @module model/Order
 * @version 2.0.1
 */
class Order {
    /**
     * Constructs a new <code>Order</code>.
     * null
     * @alias module:model/Order
     * @param id {Number} 
     * @param token {String} 
     * @param _number {String} 
     */
    constructor(id, token, _number) { 
        
        Order.initialize(this, id, token, _number);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, token, _number) { 
        obj['id'] = id;
        obj['token'] = token;
        obj['number'] = _number;
    }

    /**
     * Constructs a <code>Order</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Order} obj Optional instance to populate.
     * @return {module:model/Order} The populated <code>Order</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Order();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'String');
            }
            if (data.hasOwnProperty('status_text')) {
                obj['status_text'] = ApiClient.convertToType(data['status_text'], 'String');
            }
            if (data.hasOwnProperty('profile')) {
                obj['profile'] = Profile.constructFromObject(data['profile']);
            }
            if (data.hasOwnProperty('cart')) {
                obj['cart'] = Cart.constructFromObject(data['cart']);
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
Order.prototype['id'] = undefined;

/**
 * @member {String} token
 */
Order.prototype['token'] = undefined;

/**
 * @member {String} number
 */
Order.prototype['number'] = undefined;

/**
 * @member {String} date_created
 */
Order.prototype['date_created'] = undefined;

/**
 * Человекочитаемый статус, не код
 * @member {String} status_text
 */
Order.prototype['status_text'] = undefined;

/**
 * @member {module:model/Profile} profile
 */
Order.prototype['profile'] = undefined;

/**
 * @member {module:model/Cart} cart
 */
Order.prototype['cart'] = undefined;






export default Order;

