/**
 * OpenAPI citypizza
 * This is sionic server
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Coordinates model module.
 * @module model/Coordinates
 * @version 2.0.1
 */
class Coordinates {
    /**
     * Constructs a new <code>Coordinates</code>.
     * Координаты адреса. Используеются в профиле доставки
     * @alias module:model/Coordinates
     */
    constructor() { 
        
        Coordinates.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Coordinates</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Coordinates} obj Optional instance to populate.
     * @return {module:model/Coordinates} The populated <code>Coordinates</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Coordinates();

            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('found')) {
                obj['found'] = ApiClient.convertToType(data['found'], 'Boolean');
            }
            if (data.hasOwnProperty('lat')) {
                obj['lat'] = ApiClient.convertToType(data['lat'], 'Number');
            }
            if (data.hasOwnProperty('lng')) {
                obj['lng'] = ApiClient.convertToType(data['lng'], 'Number');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} error
 */
Coordinates.prototype['error'] = undefined;

/**
 * @member {Boolean} found
 */
Coordinates.prototype['found'] = undefined;

/**
 * Широта геоточки.
 * @member {Number} lat
 */
Coordinates.prototype['lat'] = undefined;

/**
 * Долгота геоточки.
 * @member {Number} lng
 */
Coordinates.prototype['lng'] = undefined;

/**
 * @member {String} address
 */
Coordinates.prototype['address'] = undefined;






export default Coordinates;

